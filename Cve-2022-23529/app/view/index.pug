doctype html 
html 
  head 
    title CVE-2022-23529 Sandbox
    link(rel="stylesheet", href="/css/missing.min.css")
    script(src="/js/htmx.min.js")
    script(src="/js/json-enc.js" defer) 
  body
    h1 CVE Sandboxes
      sub-title CVE-2022-23529
    div#main
      div(class=["box","info"])
        strong(class=["block", "titlebar"]) Background
        | This CVE exploits a flaw in the jsonwebtoken library for node.js.
        | Versions of this package, up to and including 8.5.1 are vulnerable.
        p
          strong References
          ul
            li
              a(href="https://nvd.nist.gov/vuln/detail/CVE-2022-23529") NIST CVE
            li 
              a(href="https://unit42.paloaltonetworks.com/jsonwebtoken-vulnerability-cve-2022-23529/") Palo Alto Write-up
        p
        | This sandbox provides a means of submitting arbitrary input either as part of a JSON format or regular URL-formatted form data.
        | The input is then passed directly into the vulnerable field without any filtering.
        | There's also a `Prove Exploit` button below which executes the exploit entirely server-side, to prove that the vulnerability exists in the library.
      div(class=["box","warn"])
        strong(class=["block", "titlebar"]) Exploit it yourself
        form(class=["table","rows"])
          p
            textarea#payload(name="payload", cols="80", rows="10" placeholder="payload here...")
          p
            button(hx-post="/attemptExploitForm" hx-target="#result") Submit as URL Encoded
            button(hx-post="/attemptExploitJson" hx-ext="json-enc" hx-target="#result") Submit as JSON
            button(hx-post="/attemptExploitJsonWithParse" hx-ext="json-enc" hx-target="#result") Submit as JSON and explicitily JSON.parse
        p 
          strong Output
        p#result
      div(class=["box","ok"])
        strong(class=["block", "titlebar"]) Force exploit it 
        | This button will execute the exploit on the server-side, as described in the Palo Alto write-up referenced above.
        | It will then list the files in the response to show the created `malicious.txt` file.
        br
        button(hx-post="/forceExploit" hx-target="#forceOutput") Prove Exploit
        p 
          strong Output
        p#forceOutput
